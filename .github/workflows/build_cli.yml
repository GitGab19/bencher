name: Build CLI

on:
  workflow_dispatch:
  workflow_run:
    workflows: [Test Rust]
    types: [completed]

env:
  CARGO_TERM_COLOR: always
  BIN_NAME: bencher
  BIN_ARCH: amd64
  DEB_DIR: deb


jobs:
  build_cli_bin:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Build CLI (Linux)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: cargo build CLI
        working-directory: ./services/cli
        run: cargo build --release
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.BIN_NAME }}
          path: target/release/${{ env.BIN_NAME }}

  build_cli_deb:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Package CLI (.deb)
    needs: build_cli_bin
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: export DEB_FILE
        run: echo "DEB_FILE=${BIN_NAME}_$(./scripts/version.sh)_${BIN_ARCH}.deb" >> $GITHUB_ENV
      - name: Download CLI Artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.BIN_NAME }}
      - name: Build .deb package
        run: ./scripts/deb.sh $BIN_NAME $(./scripts/version.sh) $BIN_ARCH $DEB_DIR
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.DEB_FILE }}
          path: ${{ env.DEB_DIR }}/${{ env.DEB_FILE }}

  release_cli_deb:
    if: ${{ github.event.workflow_run.conclusion == 'success' }} && startsWith(github.ref, 'refs/tags/')
    name: Release CLI
    needs: build_cli_deb
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: export DEB_FILE
        run: echo "DEB_FILE=${BIN_NAME}_$(./scripts/version.sh)_${BIN_ARCH}.deb" >> $GITHUB_ENV
      - name: Download CLI bin artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.BIN_NAME }}
      - name: Download CLI .deb Artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.DEB_FILE }}
      - name: GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ env.BIN_NAME }}
            ${{ env.DEB_FILE }}
